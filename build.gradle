plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.jlleitschuh.gradle.ktlint' version '11.3.2'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.21'
}

group = 'me.numilani'
version = '0.3-alpha'

project.buildDir = '/output'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://ci.mg-dev.eu/plugin/repository/everything'
    }
    maven {
        url = 'https://repo.rpkit.com/repository/maven-releases/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'org.xerial:sqlite-jdbc:3.40.1.0'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
    compileOnly 'com.bergerkiller.bukkit:BKCommonLib:1.19.2-v2'
    compileOnly 'com.bergerkiller.bukkit.regionchangetracker:BKCommonLib-RegionChangeTracker-Core:1.2'
    compileOnly 'org.bergerhealer.cloud.commandframework:cloud-paper:1.6.0'
    compileOnly 'org.bergerhealer.cloud.commandframework:cloud-annotations:1.8.0-SNAPSHOT'
    compileOnly 'org.bergerhealer.cloud.commandframework:cloud-minecraft-extras:1.8.0-SNAPSHOT'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0'
    implementation 'com.rpkit:rpk-core-bukkit:2.4.2'
    implementation 'com.rpkit:rpk-player-lib-bukkit:2.4.2'
    implementation 'com.rpkit:rpk-character-lib-bukkit:2.4.2'
}


def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

//tasks.withType(JavaCompile).configureEach {
//    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
//        options.release = targetJavaVersion
//    }
//}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate 'cloud.commandframework', 'com.bergerkiller.bukkit.common.dep.cloud'
    relocate 'io.leangen.geantyref', 'com.bergerkiller.bukkit.common.dep.typetoken'
    relocate 'me.lucko.commodore', 'com.bergerkiller.bukkit.common.dep.me.lucko.commodore'
    relocate 'net.kyori', 'com.bergerkiller.bukkit.common.dep.net.kyori'
}